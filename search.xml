<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL优化</title>
      <link href="/2023/11/16/SQL%E4%BC%98%E5%8C%96/"/>
      <url>/2023/11/16/SQL%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h1><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><h3 id="Insert优化"><a href="#Insert优化" class="headerlink" title="Insert优化"></a>Insert优化</h3><font size = 4>>批量插入<pre><code>insert into tb_test values(1,&#39;tom&#39;),(2,&#39;cat&#39;),(1,&#39;jerry&#39;);</code></pre><blockquote><p>手动提交事务</p></blockquote><pre><code>start transaction;insert into tb test values(1,&#39;Tom&#39;),(2,&#39;Cat&#39;),(3,Jerry&#39;);insert into tb test values(4,&#39;Tom&#39;),(5,&#39;Cat&#39;),(6, erry&#39;);insert into tb_test values(7,&#39;Tom&#39;),(8,Cat&#39;),(9,Jerry&#39;);commit;</code></pre><blockquote><p>主键顺序插入</p></blockquote><p>主键乱序插入:8 1 9 2 1 88 2 4 15 89 5 73<br>主键顺序插入 : 1 9 15 21 88 89</p><hr><h3 id="大批量插入数据"><a href="#大批量插入数据" class="headerlink" title="大批量插入数据"></a>大批量插入数据</h3><p>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令进行插入。</p><p>客户端连接服务端时，加上参数 <code>--local-infile</code></p><pre><code>mysgl --local-infile -u root -p</code></pre><p>设置全局参数 local infile 为1，开启从本地加载文件导入数据的开关</p><pre><code>set global local infile = 1:</code></pre><p>执行load指令将准备好的数据，加载到表结构中</p><pre><code>load data local infile &#39;/root/sql.log&#39; into table tb user&#39; fields terminated by &#39;&#39; lines terminated by &#39;n&#39;</code></pre><hr><h2 id="Oeder-by优化"><a href="#Oeder-by优化" class="headerlink" title="Oeder by优化"></a>Oeder by优化</h2><p>1.<strong>Using filesot</strong>:通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区<code>sort buffer</code>中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 <code>FileSort</code>排序</p><p>2.<strong>Using index</strong>:通过有序索引顺序扫描直接返回有序数据，这种情况即为<code>using index</code>，不需要额外排序，操作效率高.</p><blockquote><p>创建索引的时候直接创建带排序的索引,根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则。</p><p>尽量使用覆盖索引。</p></blockquote><blockquote><p>多字段排序,一个升序一个降序，此时需要注意联合索引在创建时的规则 (ASC&#x2F;DESC)。</p></blockquote><blockquote><p>如果不可避免的出现<code>fileot</code>，大数据量排序时，可以适当增大排序缓冲区大小 <code>set_ buffer_size</code>(默认256k)。</p></blockquote><hr><h2 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h2><p>遵循最左前缀法则</p><hr><h2 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h2><p>一个常见又非常头疼的问题就是 <code>limt 2000000,10</code> ，此时需要MyS0L排序前2000010 记录，仅仅返回2000000 - 2000010的记录，其他记录丢弃，查询排序的代价非常大。</p><p>用覆盖查询，先查询出需要记录的数据的id，再把查询出的id的数据当成一张表，和原表多表联查</p><p>优化思路: 一般分页查询时，通过创建 覆盖索引 能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化。</p><pre><code>explain select * from tb_sku t , (select id from tb_sku order by id limit 2000000,10) a where t.id = a.id;</code></pre><hr><h2 id="count-优化"><a href="#count-优化" class="headerlink" title="count 优化"></a>count 优化</h2><p>count(*)不取值，速度最快</p><hr><h2 id="update优化"><a href="#update优化" class="headerlink" title="update优化"></a>update优化</h2><p>lnnoDB的行锁是针对索引加的锁，不是针对记录加的锁,并且该索引不能失效，否则会从行锁升级为表锁</p><p>想要修改特定字段的数据可以给该字段加索引，就可以锁住这一行</p></font>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>索引使用规则</title>
      <link href="/2023/11/15/%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99/"/>
      <url>/2023/11/15/%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h1 id="索引使用规则"><a href="#索引使用规则" class="headerlink" title="索引使用规则"></a>索引使用规则</h1><h2 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a>最左前缀法则</h2><font size = 4>如果索引了多列(联合索引)，要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。如果跳跃某一列， <font color = 'red'>索引将部分失效(后面的字段索引失效)</font><h2 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h2><h3 id="联合索引中，出现范围查询"><a href="#联合索引中，出现范围查询" class="headerlink" title="联合索引中，出现范围查询(&gt;,&lt;)，范围查询右侧的列索引失效"></a>联合索引中，出现范围查询(&gt;,&lt;)，<font color = 'red'>范围查询右侧的列索引失效</h3></font><h2 id="索引列运算"><a href="#索引列运算" class="headerlink" title="索引列运算"></a>索引列运算</h2><h3 id="·不要在索引列上进行运算操纵-函数），索引将失效"><a href="#·不要在索引列上进行运算操纵-函数），索引将失效" class="headerlink" title="·不要在索引列上进行运算操纵(函数），索引将失效"></a>·不要在索引列上进行运算操纵(函数），<font color = 'red'>索引将失效</font></h3><h3 id="·字符串不加引号，索引将失效"><a href="#·字符串不加引号，索引将失效" class="headerlink" title="·字符串不加引号，索引将失效"></a>·字符串不加引号，<font color = 'red'>索引将失效</font></h3><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p>如果仅仅是尾部模糊匹配(xx%)，索引不会失效。如果是头部模糊匹配(%xx)，索引失效。</p><pre><code>explain select * from tb_user where profession like &quot;软件%&#39;;    索引生效explain select * from tb_user where profession like &quot;%工程&#39;;    索引失效explain select * from tb_user where profession like &quot;%工%&#39;;    索引失效</code></pre><h2 id="or链接的条件"><a href="#or链接的条件" class="headerlink" title="or链接的条件"></a>or链接的条件</h2><p>用or分割开的条件，如果or前的条件中的列有索引，而后面的列中没有索引，那么涉及的索引都不会被用到。</p><h2 id="数据分布影响"><a href="#数据分布影响" class="headerlink" title="数据分布影响"></a>数据分布影响</h2><p>如果MySQL评估使用索引比全表更慢，则不使用索引</p></p><pre><code>use indexignore indexforce index</code></pre><h2 id="覆盖索引"><a href="#覆盖索引" class="headerlink" title="覆盖索引"></a>覆盖索引</h2></font>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL约束</title>
      <link href="/2023/11/13/SQL%E7%BA%A6%E6%9D%9F/"/>
      <url>/2023/11/13/SQL%E7%BA%A6%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><h2 id="非空约束：-NOT-NULL"><a href="#非空约束：-NOT-NULL" class="headerlink" title="非空约束： NOT NULL"></a>非空约束： NOT NULL</h2><h2 id="唯一约束：-UNIQUE"><a href="#唯一约束：-UNIQUE" class="headerlink" title="唯一约束： UNIQUE"></a>唯一约束： UNIQUE</h2><h2 id="主键约束：-PRIMARY-KEY-自增：AUTO-INCREMENT"><a href="#主键约束：-PRIMARY-KEY-自增：AUTO-INCREMENT" class="headerlink" title="主键约束： PRIMARY KEY(自增：AUTO_INCREMENT)"></a>主键约束： PRIMARY KEY(自增：AUTO_INCREMENT)</h2><h2 id="默认约束：-DEFAULT"><a href="#默认约束：-DEFAULT" class="headerlink" title="默认约束： DEFAULT"></a>默认约束： DEFAULT</h2><h2 id="检查约束：-CHECK"><a href="#检查约束：-CHECK" class="headerlink" title="检查约束： CHECK"></a>检查约束： CHECK</h2><h2 id="外键约束：-FOREIGN-KEY"><a href="#外键约束：-FOREIGN-KEY" class="headerlink" title="外键约束： FOREIGN KEY"></a>外键约束： FOREIGN KEY</h2><h2 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h2><p><font size = 4><font color = "blue"><strong>ALTER TABLE</strong> </font> 表名 <font color = "blue"> <strong>ADD CONSTRAINT</strong></font>外键名称 <font color = "blue"> <strong>FOREIGN KEY</strong></font> (外键字段)<font color = "blue"> <strong>REFERENCES</strong></font> 主表名(主表字段名)</font></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例:"></a>实例:</h2><p><font size = 4><em><strong><code>alter</code></strong></em> <em><strong><code>table</code></strong></em> emp <em><strong><code>add constraint</code></strong></em> fk_emp_dept_id <em><strong><code>foregin key</code></strong></em>(dept_id) <em><strong><code>references</code></strong></em> dept(id)<br></font></p><hr><h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h2 id="select-from-表1，表2-；"><a href="#select-from-表1，表2-；" class="headerlink" title="select * from 表1，表2 ；"></a>select * from 表1，表2 ；</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL查询、排序方法</title>
      <link href="/2023/11/11/SQL%E6%9F%A5%E8%AF%A2%E6%8E%92%E5%BA%8F/"/>
      <url>/2023/11/11/SQL%E6%9F%A5%E8%AF%A2%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h1><h2 id="1、统计该企业员工数量"><a href="#1、统计该企业员工数量" class="headerlink" title="1、统计该企业员工数量"></a>1、统计该企业员工数量</h2><p><code>select count(id) from emp ;</code><br><code>select count(idcard) from emp ;  -- 不计算null值</code></p><h2 id="2、统计平均年龄"><a href="#2、统计平均年龄" class="headerlink" title="2、统计平均年龄"></a>2、统计平均年龄</h2><p><code>select avg(age) from emp ;</code></p><h2 id="3、最大年龄"><a href="#3、最大年龄" class="headerlink" title="3、最大年龄"></a>3、最大年龄</h2><p><code>select max(age) from emp ;</code></p><h2 id="3、最小年龄"><a href="#3、最小年龄" class="headerlink" title="3、最小年龄"></a>3、最小年龄</h2><p><code>select min(age) from emp ;</code></p><h2 id="4、统计北京地区员工年龄之和"><a href="#4、统计北京地区员工年龄之和" class="headerlink" title="4、统计北京地区员工年龄之和"></a>4、统计北京地区员工年龄之和</h2><p><code>select sum(age) from emp where workadress = &#39;北京&#39;</code></p><h1 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h1><h2 id="1、根据性别分组，统计男生女生人数"><a href="#1、根据性别分组，统计男生女生人数" class="headerlink" title="1、根据性别分组，统计男生女生人数"></a>1、根据性别分组，统计男生女生人数</h2><p><code>select gender,count(*) from emp group by gender;</code></p><h2 id="2、根据性别分组，统计男生女生平均年龄"><a href="#2、根据性别分组，统计男生女生平均年龄" class="headerlink" title="2、根据性别分组，统计男生女生平均年龄"></a>2、根据性别分组，统计男生女生平均年龄</h2><p><code>select gender,avg(age) from emp group by gender;</code></p><h2 id="3、查询年龄小于40的员工，并根据工作地址分组，获取员工数量大于3的工作地址"><a href="#3、查询年龄小于40的员工，并根据工作地址分组，获取员工数量大于3的工作地址" class="headerlink" title="3、查询年龄小于40的员工，并根据工作地址分组，获取员工数量大于3的工作地址"></a>3、查询年龄小于40的员工，并根据工作地址分组，获取员工数量大于3的工作地址</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select workadress, count(*) from emp where age &lt; 40 group by workadress having count(*) &gt;= 3;</span><br><span class="line">select workadress, count(*) address_count from emp where age &lt; 40 group by workadress having address_count &gt;= 3;  -- 起别名不用having</span><br></pre></td></tr></table></figure><h1 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h1><h2 id="写法："><a href="#写法：" class="headerlink" title="写法："></a>写法：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 **order by** 字段1 排序方式**,**字段2 排序方式</span><br><span class="line">asc : 升序  desc：降序</span><br></pre></td></tr></table></figure><h2 id="1、对员工按照年龄进行升序排序"><a href="#1、对员工按照年龄进行升序排序" class="headerlink" title="1、对员工按照年龄进行升序排序"></a>1、对员工按照年龄进行升序排序</h2><p><code>select * from emp order by age asc ; -- asc可以省略</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/10/28/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/10/28/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h1><h1 id="VSCode终端"><a href="#VSCode终端" class="headerlink" title="VSCode终端"></a>VSCode终端</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"># Cmder终端</span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
